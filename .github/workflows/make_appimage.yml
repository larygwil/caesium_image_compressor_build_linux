name: Make AppImage on Ubuntu LTS

on:
  # schedule:
  #   # * is a special character in YAML so you have to quote this string
  #   - cron:  '0 0 24 4 *'  # every year's 04-24 (April 24th)
    
  
  workflow_dispatch:

  push:
    branches:
      - ci
           
jobs:
  make_appimage:
    name: Make AppImage
    runs-on: ubuntu-20.04
    steps:
    - name: git checkout
      uses: actions/checkout@master
      
    - name: Switch branch
      run: |
        ls -la
        git branch -a
        git fetch origin binaries
        git branch -a
        git checkout binaries
        git checkout .
        git config user.name bot
        git config user.email bot@github.bot.none
        git config --list
        env
        
 
    - name: Install cargo vulkan xkb
      run: |
        sudo apt-get install -y cargo libvulkan-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev libxkbfile-dev
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.2.*'
        host: 'linux'
        target: 'desktop'
#          dir: ${{ github.workspace }}/qt/
        modules: 'qtimageformats'
        archives: " qttools qtsvg  qtbase icu"
        setup-python: 'false'


    - name: Show info after install Qt6
      run: |
        dpkg --list
        df -Th

    - name: Show files after install Qt 6
      run: |
        find /usr/lib
        find $RUNNER_WORKSPACE
        

    - name: download artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: build_cic.yml 
        workflow_conclusion: success
        
    - name: list downloaded files
      run: |
        find $RUNNER_WORKSPACE
        

    - name: Download Appimagetools
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/latest/download/appimagetool-x86_64.AppImage -O $RUNNER_WORKSPACE/appimagetool
        chmod a+x $RUNNER_WORKSPACE/appimagetool
        wget https://github.com/AppImage/AppImageKit/releases/latest/download/AppRun-x86_64 -O $RUNNER_WORKSPACE/AppRun
        chmod a+x $RUNNER_WORKSPACE/AppRun
        
    - name: Build AppImage and push
      run: |
        cp $RUNNER_WORKSPACE/AppRun $RUNNER_WORKSPACE/latest-build_ubuntu-lts/AppDir/
        
        $RUNNER_WORKSPACE/appimagetool $GITHUB_WORKSPACE/latest-build_ubuntu-lts/AppDir $GITHUB_WORKSPACE/CIC.AppImage
      
    - name: Download linuxdeploy
      run: |
        cd $RUNNER_WORKSPACE
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
        chmod a+x *.AppImage
        
    - name: run linuxdeploy
      run: |
        cd $RUNNER_WORKSPACE
        export LD_LIBRARY_PATH=$RUNNER_WORKSPACE/latest-build_ubuntu-lts/AppDir/usr/lib/
        ./linuxdeploy-x86_64.AppImage --appdir $RUNNER_WORKSPACE/latest-build_ubuntu-lts/AppDir --plugin qt
        

        
        
    # - name: Build AppImage
    #   uses: AppImageCrafters/build-appimage-action@master
    #   env:
    #     UPDATE_INFO: gh-releases-zsync|AppImageCrafters|qt-hello-world|latest|*x86_64.AppImage.zsync
    #   with:
    #     recipe: AppImageBuilder.yml
    
    
    
    - name: Upload Artifacts    
    - uses: actions/upload-artifact@v3
      with:
        name: AppImage
        path: ${{ runner.workspace }}/Caesium_Image_Compressor-x86_64.AppImage

      
      
      
        
        
        
        
        
        
