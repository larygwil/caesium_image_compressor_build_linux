name: Make AppImage on Ubuntu LTS

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 24 4 *'  # every year's 04-24 (April 24th)
    
  
  workflow_dispatch:

  #push:
    #branches:
      #- ci
           
jobs:
  make_appimage:
    name: Make AppImage
    runs-on: ubuntu-20.04
    steps:
    - name: git checkout
      uses: actions/checkout@master
      
    - name: Switch branch
      run: |
        ls -la
        git branch -a
        git fetch origin binaries
        git branch -a
        git checkout binaries
        git checkout .
        git config user.name bot
        git config user.email bot@github.bot.none
        git config --list
        env
        
    - name: List CIC binary ldd before install dep 
      run: |
        cd latest-build_ubuntu-lts/out
        ldd "Caesium Image Compressor"
        echo ""
        ldd libcaesium.so
    
    - name: Install cargo vulkan xkb
      run: |
        sudo apt-get install -y cargo libvulkan-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev libxkbfile-dev
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.2.*'
        host: 'linux'
        target: 'desktop'
#          dir: ${{ github.workspace }}/qt/
        archives: "qttranslations qttools qtsvg qtdeclarative qtbase icu"
        setup-python: 'false'

    - name: Show info after install Qt6
      run: |
        dpkg --list
        df -Th

    - name: Show files after install Qt 6
      run: |
        find $RUNNER_WORKSPACE
     #   find /usr
        
    - name: List CIC binary ldd after install dep 
      run: |
        cd latest-build_ubuntu-lts/out
        ldd "Caesium Image Compressor"
        echo ""
        ldd libcaesium.so
        
        
    - name: Download linuxdeployqt
      run: |
        cd $RUNNER_WORKSPACE
        wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        
    - name: Run linuxdeployqt
      run: |
        $RUNNER_WORKSPACE/linuxdeployqt-continuous-x86_64.AppImage $GITHUB_WORKSPACE/latest-build_ubuntu-lts/AppDir
        
        
        
    #- name: Build AppImage
      #uses: AppImageCrafters/build-appimage-action@master
      #env:
        #UPDATE_INFO: gh-releases-zsync|AppImageCrafters|qt-hello-world|latest|*x86_64.AppImage.zsync
      #with:
        #recipe: AppImageBuilder.yml
        
    #- name: Upload Artifacts    
      #- uses: actions/upload-artifact@v2
        #with:
          #name: AppImage

      
      
      
        
        
        
        
        
        
