name: Make AppImage on Ubuntu LTS

on:
  # schedule:
  #   # * is a special character in YAML so you have to quote this string
  #   - cron:  '0 0 24 4 *'  # every year's 04-24 (April 24th)
    
  
  workflow_dispatch:

  push:
    branches:
      - ci
           
jobs:
  make_appimage:
    name: Make AppImage
    runs-on: ubuntu-20.04
    steps:
    - name: git checkout
      uses: actions/checkout@master
      
    - name: Switch branch
      run: |
        ls -la
        git branch -a
        git fetch origin binaries
        git branch -a
        git checkout binaries
        git checkout .
        git config user.name bot
        git config user.email bot@github.bot.none
        git config --list
        env
        
 
    - name: Install cargo vulkan xkb
      run: |
        sudo apt-get install -y cargo libvulkan-dev libxcb-xkb-dev  libxcb-cursor0 libxcb-cursor-dev libxkbcommon-dev libxkbcommon-x11-dev libxkbfile-dev
        sudo apt-get install libdrm2 libexpat1 libfontconfig1 libfreetype6 libgl1 libpciaccess0 libx11-6 libx11-xcb1 libxau6 libxcb1 ca-certificates openssl           libxcb-dri2-0 libxcb-dri3-0 libxcb-present0 libxcb-randr0 libxcb-render0 libxcb-shape0 xkb-data libxkbcommon-x11-0 xorg dbus-x11           libxcb-shm0 libxcb-sync1 libxcb-util1 libxcb-xfixes0 libxcb-xkb1 libxcursor1 libxdamage1 libxdmcp6 libxfixes3 libxrender1 libxshmfence1 libxxf86vm1 
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        version: '6.6.2'
        host: 'linux'
        target: 'desktop'
        arch: 'gcc_64'
        modules: 'qtimageformats'        
        setup-python: 'false'
        cache: true



    - name: Show info after install Qt6
      run: |
        dpkg --list
        df -Th

    - name: Show files after install Qt 6
      run: |
        find /usr/lib
        find $RUNNER_WORKSPACE
    
    - name: delete unwanted qt file
      run: |
        find $RUNNER_WORKSPACE/Qt  -name "libqsqlmimer.so"   -exec rm -r {} \;

# - name: download artifact
#   uses: dawidd6/action-download-artifact@v2
#   with:
#     workflow: build_cic.yml 
#     workflow_conclusion: success

    - name: download manually uploaded artifact
      run: |
        mkdir -p $GITHUB_WORKSPACE/built_on_ubuntu-lts/
        wget https://github.com/larygwil/caesium_image_compressor_build_linux/releases/download/tmp_2.6.0_ar/artifact.tar -O $GITHUB_WORKSPACE/built_on_ubuntu-lts/artifact.tar
        
    - name: extract downloaded tar 
      run: |
        mkdir -p  $RUNNER_WORKSPACE/artifact_extract
        cd $RUNNER_WORKSPACE/artifact_extract
        tar --bzip2 -xvf $GITHUB_WORKSPACE/built_on_ubuntu-lts/artifact.tar
        find .
        

    - name: Download Appimagetools 
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/latest/download/appimagetool-x86_64.AppImage -O $RUNNER_WORKSPACE/appimagetool
        chmod a+x $RUNNER_WORKSPACE/appimagetool
        wget https://github.com/AppImage/AppImageKit/releases/latest/download/AppRun-x86_64 -O $RUNNER_WORKSPACE/AppRun
        cp $RUNNER_WORKSPACE/AppRun $RUNNER_WORKSPACE/artifact_extract/latest-build_ubuntu-lts/AppDir/
        chmod a+x $RUNNER_WORKSPACE/artifact_extract/latest-build_ubuntu-lts/AppDir/AppRun
        

      
    - name: Download linuxdeploy
      run: |
        cd $RUNNER_WORKSPACE
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
        chmod a+x *.AppImage
        
    - name: copy icon file
      run: |
        cp $RUNNER_WORKSPACE/artifact_extract/latest-build_ubuntu-lts/AppDir/logo.png $RUNNER_WORKSPACE/artifact_extract/latest-build_ubuntu-lts/AppDir/caesium-image-compressor.png
        cp $RUNNER_WORKSPACE/artifact_extract/latest-build_ubuntu-lts/AppDir/logo.png $RUNNER_WORKSPACE/artifact_extract/latest-build_ubuntu-lts/AppDir/usr/share/icons/hicolor/512x512/logo.png
        
    - name: run linuxdeploy
      run: |
        cd $RUNNER_WORKSPACE
        export LD_LIBRARY_PATH=$RUNNER_WORKSPACE/artifact_extract/latest-build_ubuntu-lts/AppDir/usr/lib/
        ./linuxdeploy-x86_64.AppImage --appdir $RUNNER_WORKSPACE/artifact_extract/latest-build_ubuntu-lts/AppDir --plugin qt 

        
    - name: run appimagetool
      run: |
        cd $RUNNER_WORKSPACE
        $RUNNER_WORKSPACE/appimagetool --version
        $RUNNER_WORKSPACE/appimagetool -v $RUNNER_WORKSPACE/artifact_extract/latest-build_ubuntu-lts/AppDir $RUNNER_WORKSPACE/Caesium_Image_Compressor-x86_64.AppImage
        
# - name: Build AppImage
#   uses: AppImageCrafters/build-appimage-action@master
#   env:
#     UPDATE_INFO: gh-releases-zsync|AppImageCrafters|qt-hello-world|latest|*x86_64.AppImage.zsync
#   with:
#     recipe: AppImageBuilder.yml
    
    
    
    - name: Upload Artifacts    
      uses: actions/upload-artifact@v3
      with:
        name: AppImage
        path: ${{ runner.workspace }}/Caesium_Image_Compressor-x86_64.AppImage

      
      
      
        
        
        
        
        
        
